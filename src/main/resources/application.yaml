mercado-pago:
  mercado-pago-public-key: ${MERCADO_PAGO_PUBLIC_KEY}
  mercado-pago-access-token: ${MERCADO_PAGO_ACCESS_TOKEN}
  mercado-pago-webhook-secret: ${MERCADO_PAGO_WEBHOOK_SECRET}
  test-mail: ${TEST_MAIL}
  nrok-url: ${NROK_URL}




security:
  jwt:
    token:
      secret-key: ${SECRET_KEY}
spring:

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: email-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:${DB_EXPOSE_PORT}/${DB_NAME}?useTimezone=true&serverTimezone=UTC
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${jAVA_MAIL_EMAIL}
    password: ${jAVA_MAIL_PASSWORD}
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.ssl.trust: smtp.gmail.com
    test-connection: true

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none

    show-sql: false



logging:
  level:
    org:
      springframework:
        security: DEBUG

  main:
    allow-bean-definition-overriding: true



